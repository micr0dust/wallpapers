function evaluateBoard(e){let t=0,r=0;const a=[];for(let t=ROWS-1;t>=0;t--)e[t]&&e[t].every((e=>e>0))&&a.push(t);r=a.length;let n=e;if(r>0){let t=e.map((e=>[...e]));a.sort(((e,t)=>t-e)),a.forEach((e=>{t.length>e&&t.splice(e,1)}));for(let e=0;e<r;e++)t.unshift(Array(COLS).fill(0));n=t}let o=0,i=0,c=0,u=0;const l=Array(COLS).fill(0);let s=0,d=0;for(let e=0;e<COLS;e++){let t=0,r=!1;for(let a=0;a<ROWS;a++)n[a]&&(n[a][e]>0?r||(t=ROWS-a,l[e]=t,r=!0):r&&0===n[a][e]&&(o++,a>0&&n[a-1]?.[e]>0&&i++));c+=t,t>s&&(s=t)}for(let e=0;e<COLS-1;e++)u+=Math.abs(l[e]-l[e+1]);for(let e=0;e<COLS;e++)for(let t=1;t<ROWS;t++)if(0===n[t]?.[e]){const r=0===e||n[t]?.[e-1]>0,a=e===COLS-1||n[t]?.[e+1]>0;if(r&&a){let r=0;for(let a=t;a<ROWS&&(0===n[a]?.[e]&&(0===e||n[a]?.[e-1]>0)&&(e===COLS-1||n[a]?.[e+1]>0));a++)r++;r>0&&(d+=r*(r+1)/2,t+=r-1)}}let f=0;1===r?f=s>12?1:-1:2===r?f=s>8?5:-.5:3===r?f=12:r>=4&&(f=40),t=-.45*c+1*COLS*f+-1*o+-8*i+-.25*u+-.2*s*s+-.4*d;let S=0;const h=Math.min(5,ROWS);for(let e=0;e<h;++e)if(n[e])for(let t=0;t<COLS;++t)n[e][t]===GARBAGE_BLOCK_ID&&(S+=ROWS-e);return t+=-.1*S,t}const canvas=document.getElementById("tetrisCanvas"),context=canvas.getContext("2d"),scoreElement=document.getElementById("score"),COLS=10,ROWS=20,BLOCK_SIZE=20;let calculatedBlockSize=20;const BOARD_WIDTH_BLOCKS=COLS,BOARD_HEIGHT_BLOCKS=ROWS,COLORS=[null,"#FF0D72","#0DC2FF","#0DFF72","#F538FF","#FF8E0D","#FFE138","#3877FF","#808080"],SHAPES=[[],[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],[[2,0,0],[2,2,2],[0,0,0]],[[0,0,3],[3,3,3],[0,0,0]],[[4,4],[4,4]],[[0,5,5],[5,5,0],[0,0,0]],[[0,6,0],[6,6,6],[0,0,0]],[[7,7,0],[0,7,7],[0,0,0]]],GARBAGE_BLOCK_ID=8;let audioContext,dropSoundBuffer=null,clearSoundBuffer=null,backgroundMusicBuffer=null,backgroundMusicSource=null;async function base64ToArrayBuffer(e){try{const t=e.split(",")[1]||e,r=window.atob(t),a=r.length,n=new Uint8Array(a);for(let e=0;e<a;e++)n[e]=r.charCodeAt(e);return n.buffer}catch(e){throw e}}async function loadAudio(e){if(!audioContext)return null;try{const t=await base64ToArrayBuffer(e);return await audioContext.decodeAudioData(t)}catch(e){return null}}function playSound(e){if(audioContext&&"suspended"!==audioContext.state||audioContext?.resume().catch((e=>{})),e&&audioContext&&"running"===audioContext.state)try{const t=audioContext.createBufferSource();t.buffer=e,t.connect(audioContext.destination),t.start(0)}catch(e){}}function startBackgroundMusic(){if(audioContext&&"suspended"!==audioContext.state||audioContext?.resume().catch((e=>{})),backgroundMusicBuffer&&audioContext&&"running"===audioContext.state){if(backgroundMusicSource){try{backgroundMusicSource.stop()}catch(e){}backgroundMusicSource=null}try{backgroundMusicSource=audioContext.createBufferSource(),backgroundMusicSource.buffer=backgroundMusicBuffer,backgroundMusicSource.loop=!0,backgroundMusicSource.connect(audioContext.destination),backgroundMusicSource.start(0)}catch(e){backgroundMusicSource=null}}}function stopBackgroundMusic(){if(backgroundMusicSource){try{backgroundMusicSource.stop()}catch(e){}backgroundMusicSource.disconnect(),backgroundMusicSource=null}}function initAudioContext(){if(!audioContext)try{if(audioContext=new(window.AudioContext||window.webkitAudioContext),"suspended"===audioContext.state){const e=()=>{audioContext&&"suspended"===audioContext.state&&audioContext.resume().then((()=>{isGameRunning&&backgroundMusicBuffer&&!backgroundMusicSource&&startBackgroundMusic()})).catch((e=>{})),document.body.removeEventListener("click",e),document.body.removeEventListener("keydown",e)};document.body.addEventListener("click",e,{once:!0}),document.body.addEventListener("keydown",e,{once:!0})}}catch(e){audioContext=null}}let gameLoopTimeout,players=[],animationStepInterval=75,isGameRunning=!1,winner=null;const LINE_CLEAR_FLASH_DURATION=200;let currentSchemeColor="rgb(26, 26, 46)",currentFlashColor="rgb(255, 255, 255)",currentSpacingBlocks=4,currentRestartDelaySeconds=7;function createBoard(){return Array.from({length:ROWS},(()=>Array(COLS).fill(0)))}function getRandomPiece(e){const t=Math.floor(Math.random()*(SHAPES.length-2))+1,r=SHAPES[t];if(!r||0===r.length){const t=1,r=SHAPES[t];e&&(e.currentRotation=0);let a={x:Math.floor(COLS/2)-Math.floor(r[0]?.length/2),y:0,shape:r.map((e=>[...e])),color:COLORS[t],typeId:t};if(e&&e.board)for(;!isValidMove(a,e.board)&&a.y<4;)1===a.typeId&&0===a.y?a.y=-1:a.y++;return a}e&&(e.currentRotation=0);let a={x:Math.floor(COLS/2)-Math.floor(r[0]?.length/2),y:0,shape:r.map((e=>[...e])),color:COLORS[t],typeId:t};if(e&&e.board)for(;!isValidMove(a,e.board)&&a.y<4;)1===a.typeId&&0===a.y?a.y=-1:a.y++;return a}function rotate(e){if(!e||!Array.isArray(e))return null;const t=e.map((e=>Array.isArray(e)?[...e]:[]));if(0===t.length)return[];const r=t.length;if(0===r||!t[0])return e;const a=t[0].length,n=Array.from({length:a},(()=>Array(r).fill(0)));for(let e=0;e<r;e++)if(t[e])for(let o=0;o<a;o++)void 0!==t[e][o]&&(n[o][r-1-e]=t[e][o]);return n}function isValidMove(e,t){if(!e||!e.shape||!t)return!1;for(let r=0;r<e.shape.length;r++)if(e.shape[r])for(let a=0;a<e.shape[r].length;a++)if(e.shape[r][a]>0){const n=e.x+a,o=e.y+r;if(n<0||n>=COLS||o>=ROWS)return e.y,!1;if(o>=0){if(!t[o])return e.y,!1;if(t[o][n]>0)return e.y,!1}}return!0}function freezePiece(e){const t=e.currentPiece,r=e.board;t&&t.shape&&r&&t.shape.forEach(((e,a)=>{e&&e.forEach(((e,n)=>{if(e>0){const e=t.y+a,o=t.x+n;e>=0&&e<ROWS&&o>=0&&o<COLS&&r[e]&&(r[e][o]=t.typeId)}}))}))}function checkGameOver(e){if(!e.currentPiece)return!0;if(!isValidMove(e.currentPiece,e.board))return!0;if(!isValidMove({...e.currentPiece,y:e.currentPiece.y+1},e.board))return!0;for(let t=0;t<COLS;++t)if(e.board[0]&&0!==e.board[0][t]){let r=!1;if(e.currentPiece.shape)for(let a=0;a<e.currentPiece.shape.length;++a)if(e.currentPiece.shape[a]){for(let n=0;n<e.currentPiece.shape[a].length;++n)if(e.currentPiece.shape[a][n]>0&&e.currentPiece.y+a===0&&e.currentPiece.x+n===t){r=!0;break}if(r)break}if(!r)return!0}return!1}function calculateGarbageToSend(e){return 1===e?0:2===e?1:3===e?2:e>=4?4:0}function addGarbageToQueue(e,t){t>0&&e&&!e.gameOver&&(e.garbageQueue+=t)}function addGarbageLinesToBoard(e){if(!e||e.garbageQueue<=0||!e.board)return;const t=Math.min(e.garbageQueue,ROWS-2);if(t<=0)return;e.garbageQueue-=t;const r=Math.floor(Math.random()*COLS),a=Array(COLS).fill(GARBAGE_BLOCK_ID);a[r]=0;for(let r=0;r<t;r++)e.board.shift(),e.board.push([...a]);if(e.currentPiece&&!isValidMove(e.currentPiece,e.board)){const r={...e.currentPiece,y:e.currentPiece.y-t};isValidMove(r,e.board)?e.currentPiece.y=r.y:(freezePiece(e),e.currentPiece=null,e.aiState="LANDED")}}function clearLinesAndAnimate(e){const t=e.board;e.linesToClear=[];for(let r=ROWS-1;r>=0;r--)t[r]&&t[r].every((e=>e>0))&&e.linesToClear.push(r);const r=e.linesToClear.length;if(r>0){playSound(clearSoundBuffer),e.isAnimatingLineClear=!0,e.aiState="ANIMATING_CLEAR";const t=[0,100,300,500,800];return e.score+=(t[r]||0)*(e.level||1),clearTimeout(e.lineClearAnimationTimer),e.lineClearAnimationTimer=setTimeout((()=>{if(e.board){e.linesToClear.sort(((e,t)=>t-e)).forEach((t=>{e.board.length>t&&e.board.splice(t,1)}));for(let t=0;t<r;t++)e.board.unshift(Array(COLS).fill(0));e.isAnimatingLineClear=!1,e.linesToClear=[],e.garbageQueue,e.aiState="SPAWNING"}}),LINE_CLEAR_FLASH_DURATION),r}return 0}function drawBlock(e,t,r,a=context,n=calculatedBlockSize,o=0,i=0){if(r){a.fillStyle=r;const c=(e+o)*n,u=(t+i)*n;a.fillRect(c,u,n,n),a.strokeStyle="rgba(0, 0, 0, 0.2)",a.lineWidth=1,a.strokeRect(c+.5,u+.5,n-1,n-1)}}function drawBoard(e,t=context,r=calculatedBlockSize){const a=e.board,n=e.xOffset;a.forEach(((a,o)=>{const i=e.isAnimatingLineClear&&e.linesToClear.includes(o);a&&a.forEach(((e,a)=>{if(0!==e){const c=i?currentFlashColor:COLORS[e];drawBlock(a,o,c,t,r,n)}}))})),t.strokeStyle="#AAAAAA",t.lineWidth=2,t.strokeRect(n*r,0,COLS*r,ROWS*r)}function drawPiece(e,t=context,r=calculatedBlockSize){const a=e.currentPiece,n=e.xOffset;a&&a.shape&&a.shape.forEach(((e,o)=>{e&&e.forEach(((e,i)=>{if(e>0){const e=a.x+i,c=a.y+o;c>=0&&e>=0&&e<COLS&&drawBlock(e,c,a.color,t,r,n)}}))}))}function drawUI(e,t=context,r=calculatedBlockSize){t.fillStyle="#FFFFFF";const a=Math.max(10,Math.floor(.7*r));if(t.font=`bold ${a}px "Segoe UI", Arial, sans-serif`,t.textAlign="left",t.textBaseline="top",e.forEach((e=>{if(!e)return;const n=e.xOffset*r+.5*r,o=ROWS*r+.5*r,i=1.4*a;t.fillText(`P ${e.id+1}`,n,o),t.fillText(`Score: ${e.score}`,n,o+i),e.garbageQueue>0&&(t.fillStyle="#FF8080",t.fillText(`+ ${e.garbageQueue}`,n+4*r,o+i),t.fillStyle="#FFFFFF")})),null!==winner){t.fillStyle="rgba(0, 0, 0, 0.8)";const e=canvas.height/2-2.5*r,a=5*r;t.fillRect(0,e,canvas.width,a),t.fillStyle="#00FF00";const n=Math.max(16,Math.floor(1.5*r));t.font=`bold ${n}px "Segoe UI", Arial, sans-serif`,t.textAlign="center",t.textBaseline="middle";let o="DRAW"===winner?"DRAW!":`Player ${winner+1} wins!`;o+=" Restarting...",t.fillText(o,canvas.width/2,e+a/2),t.textAlign="left",t.textBaseline="top"}}function drawGame(){context.fillStyle=currentSchemeColor,context.fillRect(0,0,canvas.width,canvas.height),players.forEach((e=>{e&&(drawBoard(e),!e.currentPiece||e.isAnimatingLineClear||e.gameOver||drawPiece(e))})),drawUI(players)}function findBestMove(e){let t=-1/0,r=null;const a=e.currentPiece,n=e.board,o=2*ROWS;if(!a||!a.shape||!n)return null;let i=a.shape.map((e=>Array.isArray(e)?[...e]:e));for(let c=0;c<4;c++){if(!i)continue;let u=COLS,l=-1;for(let e=0;e<i.length;++e)if(i[e])for(let t=0;t<i[e].length;++t)i[e][t]>0&&(u=Math.min(u,t),l=Math.max(l,t));if(-1===l){i=rotate(i);continue}const s=-u,d=COLS-1-l;if(s>d)i=rotate(i);else{for(let u=s;u<=d;u++){let l={...a,shape:i,x:u,y:-1},s=0,d=-2;for(;!isValidMove({...l,y:d},n);)if(d++,s++,d>1||s>o){d=ROWS;break}if(d>1&&s>o)continue;if(d>1||!isValidMove({...l,y:d},n))continue;l.y=d;let f={...l},S=0;for(;isValidMove({...f,y:f.y+1},n);)if(f.y++,S++,S>o){f.y=e.currentPiece.y;break}const h=f.y,g=n.map((e=>[...e])),y={...l,y:h,shape:i,typeId:a.typeId};let m=!0;if(y.shape.forEach(((e,t)=>{e&&m&&e.forEach(((e,r)=>{if(e>0){const e=y.y+t,a=y.x+r;e>=0&&e<ROWS&&a>=0&&a<COLS&&g[e]?(0!==g[e][a]&&(m=!1),g[e][a]=y.typeId):(e>=ROWS||a<0||a>=COLS)&&(m=!1)}}))})),m){const e=evaluateBoard(g);e>t&&(t=e,r={rotationCount:c,x:y.x,score:e})}}i=rotate(i)}}return r}function createPlayer(e,t){return{id:e,board:createBoard(),score:0,currentPiece:null,nextPiece:null,aiState:"SPAWNING",bestMove:null,currentRotation:0,garbageQueue:0,gameOver:!1,xOffset:t,isAnimatingLineClear:!1,linesToClear:[],lineClearAnimationTimer:null,level:1}}function resetGame(){clearTimeout(gameLoopTimeout),stopBackgroundMusic(),players.forEach((e=>clearTimeout(e?.lineClearAnimationTimer))),players=[createPlayer(0,0),createPlayer(1,COLS+currentSpacingBlocks)],players.forEach((e=>{e&&(e.nextPiece=getRandomPiece(e))})),winner=null,isGameRunning=!1}function startGame(){initAudioContext(),isGameRunning&&(clearTimeout(gameLoopTimeout),players.forEach((e=>clearTimeout(e?.lineClearAnimationTimer))),stopBackgroundMusic()),resetGame(),resizeCanvas(),Promise.all([loadAudio(DROP_BASE64).then((e=>dropSoundBuffer=e)),loadAudio(CLEAR_BASE64).then((e=>clearSoundBuffer=e)),loadAudio(BACK_GROUHND_MUSIC_BASE64).then((e=>backgroundMusicBuffer=e))]).then((()=>{audioContext&&"running"===audioContext.state&&startBackgroundMusic()})).catch((e=>{})),isGameRunning=!0,gameLoop()}function spawnNewPieceAndCalculateAI(e){if(e.garbageQueue>0){if(addGarbageLinesToBoard(e),e.gameOver)return;if("LANDED"===e.aiState)return}if(e.currentPiece=e.nextPiece,e.nextPiece=getRandomPiece(e),e.currentRotation=0,checkGameOver(e))return e.currentPiece&&freezePiece(e),e.currentPiece=null,e.gameOver=!0,void(e.aiState="GAME_OVER");e.bestMove=findBestMove(e),e.bestMove?e.currentRotation!==e.bestMove.rotationCount?e.aiState="ROTATING":e.currentPiece.x!==e.bestMove.x?e.aiState="MOVING_HORIZONTALLY":e.aiState="DROPPING":e.aiState="DROPPING"}function gameLoop(){clearTimeout(gameLoopTimeout);let e=players.filter((e=>e&&!e.gameOver));if(e.length<=1&&isGameRunning){if(isGameRunning=!1,stopBackgroundMusic(),1===e.length)winner=e[0].id;else{const e=players.filter((e=>e&&!e.gameOver));winner=1===e.length?e[0].id:"DRAW"}return drawGame(),void(gameLoopTimeout=setTimeout(startGame,1e3*currentRestartDelaySeconds))}e.forEach((e=>{const t=players.find((t=>t&&t.id!==e.id));if("ANIMATING_CLEAR"!==e.aiState)switch(e.aiState){case"SPAWNING":spawnNewPieceAndCalculateAI(e);break;case"ROTATING":if(!e.currentPiece||!e.bestMove){e.aiState="SPAWNING";break}if(e.currentRotation!==e.bestMove.rotationCount){const t=rotate(e.currentPiece.shape),r={...e.currentPiece,shape:t};t&&isValidMove(r,e.board)?(e.currentPiece.shape=t,e.currentRotation=(e.currentRotation+1)%4):e.currentPiece.x!==e.bestMove.x?e.aiState="MOVING_HORIZONTALLY":e.aiState="DROPPING"}e.currentRotation===e.bestMove.rotationCount&&(e.currentPiece.x!==e.bestMove.x?e.aiState="MOVING_HORIZONTALLY":e.aiState="DROPPING");break;case"MOVING_HORIZONTALLY":if(!e.currentPiece||!e.bestMove){e.aiState="SPAWNING";break}if(e.currentPiece.x!==e.bestMove.x){const t=e.currentPiece.x<e.bestMove.x?1:-1,r=e.currentPiece.x+t;isValidMove({...e.currentPiece,x:r},e.board)?e.currentPiece.x=r:e.aiState="DROPPING"}e.currentPiece.x===e.bestMove.x&&(e.aiState="DROPPING");break;case"DROPPING":if(!e.currentPiece){e.aiState="SPAWNING";break}const r=e.currentPiece.y+1;isValidMove({...e.currentPiece,y:r},e.board)?e.currentPiece.y=r:(playSound(dropSoundBuffer),freezePiece(e),e.currentPiece=null,e.aiState="LANDED");break;case"LANDED":const a=clearLinesAndAnimate(e);if(0===a)e.aiState="SPAWNING";else if(t&&!t.gameOver){const e=calculateGarbageToSend(a);e>0&&addGarbageToQueue(t,e)}break;case"GAME_OVER":break;default:e.aiState="SPAWNING"}})),drawGame(),isGameRunning&&(gameLoopTimeout=setTimeout(gameLoop,animationStepInterval))}function resizeCanvas(){const e=window.innerHeight,t=window.innerWidth,r=2*COLS+currentSpacingBlocks,a=.95*t,n=.95*e,o=Math.floor(a/r),i=Math.floor(n/(ROWS+4));calculatedBlockSize=Math.max(8,Math.min(o,i,35)),canvas.width=r*calculatedBlockSize,canvas.height=(ROWS+4)*calculatedBlockSize,players.length>0&&players[0]&&(players[0].xOffset=0,players.length>1&&players[1]&&(players[1].xOffset=COLS+currentSpacingBlocks)),canvas.style.position="absolute",canvas.style.left=`max(0px, ${(t-canvas.width)/2}px)`,canvas.style.top=`max(0px, ${(e-canvas.height)/2}px)`,drawGame()}function weColorToRGB(e){if("string"!=typeof e)return"rgb(0,0,0)";try{let t=e.split(" ").map((e=>Math.ceil(255*parseFloat(e))));return t=t.map((e=>Math.max(0,Math.min(255,e)))),`rgb(${t[0]}, ${t[1]}, ${t[2]})`}catch(e){return"rgb(0,0,0)"}}window.addEventListener("resize",resizeCanvas),document.addEventListener("DOMContentLoaded",(e=>{canvas&&(initAudioContext(),startGame())})),window.wallpaperPropertyListener={applyUserProperties:function(e){let t=!1,r=!1;if(e.schemecolor){const t=weColorToRGB(e.schemecolor.value);currentSchemeColor!==t&&(currentSchemeColor=t,r=!0)}if(e.speed){const t=20,r=250,a=10;let n=r-(e.speed.value-a)/(200-a)*(r-t);n=Math.max(t,Math.min(r,Math.round(n))),animationStepInterval!==n&&(animationStepInterval=n)}if(e.flashcolor){const t=weColorToRGB(e.flashcolor.value);currentFlashColor!==t&&(currentFlashColor=t,players.some((e=>e?.isAnimatingLineClear))&&(r=!0))}if(e.spacing){const r=parseInt(e.spacing.value,10);!isNaN(r)&&r>=0&&currentSpacingBlocks!==r&&(currentSpacingBlocks=r,t=!0)}if(e.restartdelay){const t=parseInt(e.restartdelay.value,10);!isNaN(t)&&t>=1&&currentRestartDelaySeconds!==t&&(currentRestartDelaySeconds=t)}t?resizeCanvas():r&&drawGame()}};